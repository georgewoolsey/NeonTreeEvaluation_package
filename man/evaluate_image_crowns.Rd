% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evaluate_image_crowns.R
\name{evaluate_image_crowns}
\alias{evaluate_image_crowns}
\title{Compute evaluation metrics for the hand-annotated images}
\usage{
evaluate_image_crowns(predictions, project = FALSE, show = TRUE,
  summarize = FALSE)
}
\arguments{
\item{predictions}{The format of the submission is either a csv with 5 columns: plot_name, xmin, ymin, xmax, ymax or a sf polygon object with poylgons in image coordinates.
Each row contains information for one predicted bounding box.
The plot column should be named the same as the files in the dataset (e.g. SJER_021), not the path to the file.}

\item{project}{Whether to submission coordinates need to be projected in UTM geographic coordinates. If a polygon shp submission is provided, project will be set to True.}

\item{show}{Logical. Plot the overlayed annotations for each plot?}

\item{summarize}{Whether to compute summary statistics (TRUE) or return raw matching data (False), see \code{summary_statistics}}
}
\value{
If summarize is True, a set of summary measures from \code{summary_statistics} for the overall score, the entire site score, and the per-plot score.
If False, a dataframe with the intersection-over-union scores for each prediction.
}
\description{
Submit a set of predictions to be evaluated against individual tree crowns annotated by an observer looking at the imagery.
}
\details{
The NeonTreeEvaluation benchmark contains evaluation data from 22 sites from the National Ecological Observation Network.
Crowns were annotated by looking at a combination of the RGB image, a LiDAR-derived canopy height model, hyperspectral reflectance and, where available, field collected data on stem location.
This function is a wrapper for \code{evaluate_plot}. It first looks which plot_names match the benchmark dataset. Plots with no predictions, or which are not included, are ignored.
}
\examples{
#' data("submission")
df<-submission \%>\% dplyr::filter(plot_name \%in\% c("SJER_052","TEAK_061","TEAK_057"))
results<-evaluate_image_crowns(submission = df,project = FALSE, show=TRUE, summarize = TRUE)
}
